---
source: squirrel_lang/src/lexer.rs
expression: Lexer test for squirrel_repo/flow.nut
---
- Function
- Identifier: min
- LeftParenthesis
- Identifier: x
- Comma
- Identifier: y
- RightParenthesis
- Newline
- Return
- Identifier: x
- LessThan
- Identifier: y
- QuestionMark
- Identifier: x
- Colon
- Identifier: y
- Semicolon
- Newline
- Newline
- Function
- Identifier: max
- LeftParenthesis
- Identifier: x
- Comma
- Identifier: y
- RightParenthesis
- Newline
- Return
- Identifier: x
- GreaterThan
- Identifier: y
- QuestionMark
- Identifier: x
- Colon
- Identifier: y
- Semicolon
- Newline
- Newline
- If
- LeftParenthesis
- Identifier: min
- LeftParenthesis
- Integer: 100
- Comma
- Integer: 200
- RightParenthesis
- GreaterThan
- Identifier: max
- LeftParenthesis
- Integer: 50
- Comma
- Integer: 20
- RightParenthesis
- RightParenthesis
- Newline
- Identifier: print
- LeftParenthesis
- String: "I'm useless statement just to show up the if/else\n"
- RightParenthesis
- Semicolon
- Newline
- Else
- Newline
- Identifier: print
- LeftParenthesis
- String: "squirrel!!\n"
- RightParenthesis
- Semicolon
- Newline
- Newline
- Identifier: print
- LeftParenthesis
- String: "\n"
- RightParenthesis
- Newline
- Newline
- Function
- Identifier: typy
- LeftParenthesis
- Identifier: obj
- RightParenthesis
- Newline
- LeftCurlyBrace
- Newline
- Switch
- LeftParenthesis
- Typeof
- Identifier: obj
- RightParenthesis
- Newline
- LeftCurlyBrace
- Newline
- Case
- String: integer
- Colon
- Newline
- Case
- String: float
- Colon
- Newline
- Return
- String: is a number
- Semicolon
- Newline
- Case
- String: table
- Colon
- Newline
- Case
- String: array
- Colon
- Newline
- Return
- String: is a container
- Semicolon
- Newline
- Default
- Colon
- Newline
- Return
- String: is other stuff
- Newline
- RightCurlyBrace
- Newline
- RightCurlyBrace
- Newline
- Newline
- Local
- Identifier: a
- Assign
- Integer: 1
- Comma
- Identifier: b
- Assign
- LeftCurlyBrace
- RightCurlyBrace
- Comma
- Identifier: c
- Assign
- Function
- LeftParenthesis
- Identifier: a
- Comma
- Identifier: b
- RightParenthesis
- LeftCurlyBrace
- Return
- Identifier: a
- Plus
- Identifier: b
- Semicolon
- RightCurlyBrace
- Newline
- Newline
- Identifier: print
- LeftParenthesis
- Typeof
- Identifier: a
- Plus
- String: "\n"
- RightParenthesis
- Newline
- Identifier: print
- LeftParenthesis
- String: "a "
- Plus
- Identifier: typy
- LeftParenthesis
- Identifier: a
- RightParenthesis
- Plus
- String: "\n"
- RightParenthesis
- Semicolon
- Newline
- Identifier: print
- LeftParenthesis
- Typeof
- Identifier: b
- Plus
- String: "\n"
- RightParenthesis
- Newline
- Identifier: print
- LeftParenthesis
- String: "b "
- Plus
- Identifier: typy
- LeftParenthesis
- Identifier: b
- RightParenthesis
- Plus
- String: "\n"
- RightParenthesis
- Semicolon
- Newline
- Identifier: print
- LeftParenthesis
- Typeof
- Identifier: c
- Plus
- String: "\n"
- RightParenthesis
- Newline
- Identifier: print
- LeftParenthesis
- String: "c "
- Plus
- Identifier: typy
- LeftParenthesis
- Identifier: c
- RightParenthesis
- Plus
- String: "\n"
- RightParenthesis
- Semicolon
- Newline
