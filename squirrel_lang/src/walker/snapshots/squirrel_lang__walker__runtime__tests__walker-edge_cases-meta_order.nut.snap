---
source: squirrel_lang/src/walker/runtime.rs
expression: Walker test for edge_cases/meta_order.nut (Generated by sq_expect.py)
---
With Tables:
Table1 _add called
Table1{n=3}
Table2 _add called
Table2{n=3}
Table1 _sub called
Table1{n=-1}
Table2 _sub called
Table2{n=1}
Table1 _mul called
Table1{n=2}
Table2 _mul called
Table2{n=2}
Table1 _div called
Table1{n=0}
Table2 _div called
Table2{n=2}
Table1 _add called
Table1 _modulo called
Table1{n=1}
Table2 _add called
Table2 _modulo called
Table2{n=0}

With Classes:
Class1 _add called
Class1(n=3)
Class2 _add called
Class2(n=3)
Class1 _sub called
Class1(n=-1)
Class2 _sub called
Class2(n=1)
Class1 _mul called
Class1(n=2)
Class2 _mul called
Class2(n=2)
Class1 _div called
Class1(n=0)
Class2 _div called
Class2(n=2)
Class1 _add called
Class1 _modulo called
Class1(n=1)
Class2 _add called
Class2 _modulo called
Class2(n=0)

With a mix:
Table1 _add called
Table1{n=3}
Class2 _add called
Class2(n=3)
Table1 _sub called
Table1{n=-1}
Class2 _sub called
Class2(n=1)
Table1 _mul called
Table1{n=2}
Class2 _mul called
Class2(n=2)
Table1 _div called
Table1{n=0}
Class2 _div called
Class2(n=2)
Table1 _add called
Table1 _modulo called
Table1{n=1}
Class2 _add called
Class2 _modulo called
Class2(n=0)
Class1 _add called
Class1(n=3)
Table2 _add called
Table2{n=3}
Class1 _sub called
Class1(n=-1)
Table2 _sub called
Table2{n=1}
Class1 _mul called
Class1(n=2)
Table2 _mul called
Table2{n=2}
Class1 _div called
Class1(n=0)
Table2 _div called
Table2{n=2}
Class1 _add called
Class1 _modulo called
Class1(n=1)
Table2 _add called
Table2 _modulo called
Table2{n=0}

Now with strings:
Table1{n=1}Hello World!
Hello World!Table1{n=1}
Class1(n=1)Hello World!
Hello World!Class1(n=1)
