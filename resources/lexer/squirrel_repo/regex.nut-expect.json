[
  "Local",
  {
    "Identifier": "ex"
  },
  "Assign",
  {
    "Identifier": "regexp"
  },
  "LeftParenthesis",
  {
    "String": "[a-zA-Z]+"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline",
  "Local",
  {
    "Identifier": "string"
  },
  "Assign",
  {
    "String": "123 Test; strlen(str);"
  },
  "Semicolon",
  "Newline",
  "Local",
  {
    "Identifier": "res"
  },
  "Assign",
  {
    "Identifier": "ex"
  },
  "Period",
  {
    "Identifier": "search"
  },
  "LeftParenthesis",
  {
    "Identifier": "string"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "print"
  },
  "LeftParenthesis",
  {
    "Identifier": "string"
  },
  "Period",
  {
    "Identifier": "slice"
  },
  "LeftParenthesis",
  {
    "Identifier": "res"
  },
  "Period",
  {
    "Identifier": "begin"
  },
  "Comma",
  {
    "Identifier": "res"
  },
  "Period",
  {
    "Identifier": "end"
  },
  "RightParenthesis",
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "print"
  },
  "LeftParenthesis",
  {
    "String": "\n"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "ex"
  },
  "Assign",
  {
    "Identifier": "regexp"
  },
  "LeftParenthesis",
  {
    "String": "\\m()"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "string"
  },
  "Assign",
  {
    "String": "123 Test; doSomething(str, getTemp(), (a+(b/c)));"
  },
  "Semicolon",
  "Newline",
  {
    "Identifier": "res"
  },
  "Assign",
  {
    "Identifier": "ex"
  },
  "Period",
  {
    "Identifier": "search"
  },
  "LeftParenthesis",
  {
    "Identifier": "string"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "print"
  },
  "LeftParenthesis",
  {
    "Identifier": "string"
  },
  "Period",
  {
    "Identifier": "slice"
  },
  "LeftParenthesis",
  {
    "Identifier": "res"
  },
  "Period",
  {
    "Identifier": "begin"
  },
  "Comma",
  {
    "Identifier": "res"
  },
  "Period",
  {
    "Identifier": "end"
  },
  "RightParenthesis",
  "RightParenthesis",
  "Semicolon",
  "Newline",
  {
    "Identifier": "print"
  },
  "LeftParenthesis",
  {
    "String": "\n"
  },
  "RightParenthesis",
  "Semicolon",
  "Newline"
]